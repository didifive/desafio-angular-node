-- MySQL Script generated by MySQL Workbench
-- Fri Sep  2 14:25:11 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema golaco_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `golaco_db` ;

-- -----------------------------------------------------
-- Schema golaco_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `golaco_db` DEFAULT CHARACTER SET UTF8MB4 ;
USE `golaco_db` ;

-- -----------------------------------------------------
-- Table `golaco_db`.`Person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Person` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `personType` VARCHAR(1) NOT NULL,
  `cpfCnpj` VARCHAR(14) NOT NULL,
  `email` VARCHAR(255) NULL,
  `phone` VARCHAR(255) NULL,
  `balance` DECIMAL(15,2) NULL,
  `balanceAt` TIMESTAMP NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_CpfCnpj` (`cpfCnpj` ASC) VISIBLE,
  UNIQUE INDEX `unique_Email` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(255) NULL,
  `city` VARCHAR(255) NULL,
  `stateFU` VARCHAR(2) NULL,
  `postalCode` VARCHAR(8) NULL,
  `country` VARCHAR(255) NULL,
  `personId` INT NOT NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Address_Person_idx` (`personId` ASC) VISIBLE,
  CONSTRAINT `fk_Address_Person`
    FOREIGN KEY (`personId`)
    REFERENCES `golaco_db`.`Person` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Match`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Match` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `groupRound` VARCHAR(100) NULL,
  `matchStart` TIMESTAMP NULL,
  `matchEnd` TIMESTAMP NULL,
  `status` VARCHAR(10) NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `teamImage` VARCHAR(255) NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Bet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Bet` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dateTimeAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `amount` DECIMAL(15,2) NOT NULL,
  `status` VARCHAR(10) NULL,
  `personId` INT NOT NULL,
  `matchId` INT NOT NULL,
  `teamId` INT NOT NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Bet_Person1_idx` (`personId` ASC) VISIBLE,
  INDEX `fk_Bet_Match1_idx` (`matchId` ASC) VISIBLE,
  INDEX `fk_Bet_Team1_idx` (`teamId` ASC) VISIBLE,
  UNIQUE INDEX `unique_Person_Match` (`personId` ASC, `matchId` ASC) VISIBLE,
  CONSTRAINT `fk_Bet_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `golaco_db`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bet_Match1`
    FOREIGN KEY (`matchId`)
    REFERENCES `golaco_db`.`Match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bet_Team1`
    FOREIGN KEY (`teamId`)
    REFERENCES `golaco_db`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Transaction` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `amount` DECIMAL(15,2) NOT NULL,
  `dateTimeAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` VARCHAR(10) NOT NULL,
  `receiver` INT NULL,
  `payer` INT NULL,
  `betId` INT NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Transaction_Person1_idx` (`receiver` ASC) VISIBLE,
  INDEX `fk_Transaction_Person2_idx` (`payer` ASC) VISIBLE,
  INDEX `fk_Transaction_Bet1_idx` (`betId` ASC) VISIBLE,
  CONSTRAINT `fk_Transaction_Person1`
    FOREIGN KEY (`receiver`)
    REFERENCES `golaco_db`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transaction_Person2`
    FOREIGN KEY (`payer`)
    REFERENCES `golaco_db`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transaction_Bet`
    FOREIGN KEY (`betId`)
    REFERENCES `golaco_db`.`Bet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `role` VARCHAR(5) NULL,
  `personId` INT NOT NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_User_Person1_idx` (`personId` ASC) VISIBLE,
  UNIQUE INDEX `unique_Username` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_User_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `golaco_db`.`Person` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`MatchsTeams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`MatchsTeams` (
  `matchId` INT NOT NULL,
  `teamId` INT NOT NULL,
  `teamResult` INT NULL,
  `teamOrder` TINYINT NULL,
  `odds` DECIMAL(15,2) NULL,
  `winner` TINYINT NULL,
  `lastUsername` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`matchId`, `teamId`),
  INDEX `fk_MatchsTeams_Team1_idx` (`teamId` ASC) VISIBLE,
  INDEX `fk_MatchsTeams_Match1_idx` (`matchId` ASC) VISIBLE,
  CONSTRAINT `fk_MatchsTeams_Team1`
    FOREIGN KEY (`teamId`)
    REFERENCES `golaco_db`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MatchsTeams_Match1`
    FOREIGN KEY (`matchId`)
    REFERENCES `golaco_db`.`Match` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- =====================================================
-- =====================================================
-- -----------------------------------------------------
-- AUDIT TABLES
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `golaco_db`.`Person_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Person_audit` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  `PersonType` VARCHAR(1) NULL,
  `cpfCnpj` VARCHAR(14) NULL,
  `email` VARCHAR(255) NULL,
  `phone` VARCHAR(255) NULL,
  `balance` DECIMAL(15,2) NOT NULL DEFAULT 0,
  `balanceAt` TIMESTAMP NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `balance`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Address_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Address_audit` (
  `id` INT NOT NULL,
  `street` VARCHAR(255) NOT NULL DEFAULT '',
  `city` VARCHAR(255) NULL,
  `stateFU` VARCHAR(2) NULL,
  `postalCode` VARCHAR(8) NULL,
  `country` VARCHAR(255) NULL,
  `personId` INT NOT NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `street`, `personId`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`User_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`User_audit` (
  `id` INT NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `role` VARCHAR(5) NULL,
  `personId` INT NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `username`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Transaction_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Transaction_audit` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `amount` DECIMAL(15,2) NOT NULL,
  `dateTimeAt` TIMESTAMP NOT NULL,
  `status` VARCHAR(10) NULL,
  `receiver` INT NULL,
  `payer` INT NULL,
  `betId` INT NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `amount`, `audit_timestamp`, `dateTimeAt`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Bet_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Bet_audit` (
  `id` INT NOT NULL,
  `dateTimeAt` TIMESTAMP NOT NULL,
  `amount` DECIMAL(15,2) NOT NULL,
  `status` VARCHAR(10) NULL,
  `personId` INT NOT NULL,
  `matchId` INT NOT NULL,
  `teamId` INT NOT NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `personId`, `matchId`, `teamId`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Match_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Match_audit` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  `groupRound` VARCHAR(100) NULL,
  `matchStart` TIMESTAMP NULL,
  `matchEnd` TIMESTAMP NULL,
  `status` VARCHAR(10) NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`MatchsTeams_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`MatchsTeams_audit` (
  `matchId` INT NOT NULL,
  `teamId` INT NOT NULL,
  `teamResult` INT NULL,
  `teamOrder` TINYINT NULL,
  `odds` DECIMAL(15,2) NOT NULL,
  `winner` TINYINT NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`matchId`, `teamId`, `odds`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `golaco_db`.`Team_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `golaco_db`.`Team_audit` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `teamImage` VARCHAR(255) NULL,
  `audit_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `audit_operation` VARCHAR(1) NOT NULL,
  `audit_username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `name`, `audit_timestamp`, `audit_operation`, `audit_username`))
ENGINE = InnoDB;

-- =====================================================
-- =====================================================

-- -----------------------------------------------------
-- PROCEDURES
-- -----------------------------------------------------
USE `golaco_db`;

DELIMITER $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Transaction_made`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Transaction_made`(IN amount DECIMAL(15,2)
					, IN dateTimeAt TIMESTAMP
  					, IN receiver INT
  					, IN payer INT
					, IN transactionId INT
)
BEGIN
	DECLARE receiverBalance DECIMAL(15,2);
	DECLARE payerBalance DECIMAL(15,2);
	
	IF payer is not null THEN
		SET payerBalance = (SELECT balance FROM golaco_db.Person WHERE golaco_db.Person.id = payer);
		SET payerBalance = payerBalance - amount;
		UPDATE golaco_db.Person
			SET balance = payerBalance
				, balanceAt = dateTimeAt
				, lastUsername = concat('System Transaction Id: ',transactionId)
			WHERE Person.id = payer;
    END IF;
	
	IF receiver is not null THEN
		SET receiverBalance = (SELECT balance FROM golaco_db.Person WHERE golaco_db.Person.id = receiver);
		SET receiverBalance = receiverBalance + amount;
		UPDATE golaco_db.Person
			SET balance = receiverBalance
				, balanceAt = dateTimeAt
				, lastUsername = concat('System Transaction Id: ',transactionId)
			WHERE Person.id = receiver;
	END IF;
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Person_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Person_audit`(IN id INT
					, IN name VARCHAR(255)
					, IN personType VARCHAR(1)
					, IN cpfCnpj VARCHAR(14)
					, IN email VARCHAR(255)
					, IN phone VARCHAR(255)
					, IN balance DECIMAL(15,2)
					, IN balanceAt TIMESTAMP
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Person_audit (id, name, personType, cpfCnpj, email, phone, balance, balanceAt, audit_operation, audit_username)
	VALUES
		(id, name, personType, cpfCnpj, email, phone, balance, balanceAt, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Address_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Address_audit`(IN id INT
					, IN street VARCHAR(255)
					, IN city VARCHAR(255)
					, IN stateFU VARCHAR(2) 
					, IN postalCode VARCHAR(8)
					, IN country VARCHAR(255)
					, IN personId INT
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Address_audit (id, street, city, stateFU, postalCode, country, personId, audit_operation, audit_username)
	VALUES
		(id, street, city, stateFU, postalCode, country, personId, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_User_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_User_audit`(IN id INT
					, IN username VARCHAR(255)
					, IN password VARCHAR(255)
					, IN role VARCHAR(5)
					, IN personId INT
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		User_audit (id, username, password, role, personId, audit_operation, audit_username)
	VALUES
		(id, username, password, role, personId, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Transaction_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Transaction_audit`(IN id INT
					, IN name VARCHAR(255)
					, IN amount DECIMAL(15,2)
					, IN dateTimeAt TIMESTAMP
  					, IN status VARCHAR(10)
  					, IN receiver INT
  					, IN payer INT
					, IN betId INT
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Transaction_audit (id, name, amount, dateTimeAt, status, receiver, payer, betId, audit_operation, audit_username)
	VALUES
		(id, name, amount, dateTimeAt, status, receiver, payer, betId, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Bet_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Bet_audit`(IN id INT
					, IN amount DECIMAL(15,2)
					, IN dateTimeAt TIMESTAMP
					, IN status VARCHAR(10)
					, IN personId INT
					, IN matchId INT
					, IN teamId INT
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Bet_audit (id, dateTimeAt, amount, status, personId, matchId, teamId, audit_operation, audit_username)
	VALUES
		(id, dateTimeAt, amount, status, personId, matchId, teamId, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Match_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Match_audit`(IN id INT
					, IN name VARCHAR(255)
					, IN groupRound VARCHAR(100)
					, IN matchStart TIMESTAMP
					, IN matchEnd TIMESTAMP
					, IN status VARCHAR(10)
					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Match_audit (id, name, groupRound, matchStart, matchEnd, status, audit_operation, audit_username)
	VALUES
		(id, name, groupRound, matchStart, matchEnd, status, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_MatchsTeams_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_MatchsTeams_audit`(IN matchId INT
					, IN teamId INT
					, IN teamResult INT
					, IN teamOrder TINYINT
					, IN odds DECIMAL(15,2)
					, IN winner TINYINT
  					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		MatchsTeams_audit (matchId, teamId, teamResult, teamOrder, odds, winner, audit_operation, audit_username)
	VALUES
		(matchId, teamId, teamResult, teamOrder, odds, winner, audit_operation, audit_username);
END $$

-- -----------------------------------------------------
-- Procedure `golaco_db`.`p_Team_audit`
-- -----------------------------------------------------
CREATE PROCEDURE `p_Team_audit`(IN id INT
					, IN name VARCHAR(255)
					, IN teamImage VARCHAR(255)
  					, IN audit_operation VARCHAR(1)
					, IN audit_username VARCHAR(255)
)
BEGIN
	INSERT INTO
		Team_audit (id, name, teamImage, audit_operation, audit_username)
	VALUES
		(id, name, teamImage, audit_operation, audit_username);
END $$

DELIMITER ;

-- =====================================================
-- =====================================================
-- -----------------------------------------------------
-- TRIGGERS
-- -----------------------------------------------------
USE `golaco_db`;

DELIMITER $$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Person_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Person_AFTER_INSERT` AFTER INSERT ON `Person` FOR EACH ROW
BEGIN
	CALL p_Person_audit(NEW.id
					, NEW.name
					, NEW.personType
					, NEW.cpfCnpj
					, NEW.email
					, NEW.phone
					, NEW.balance
					, NEW.balanceAt
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Person_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Person_AFTER_UPDATE` AFTER UPDATE ON `Person` FOR EACH ROW
BEGIN
	CALL p_Person_audit(NEW.id
					, NEW.name
					, NEW.personType
					, NEW.cpfCnpj
					, NEW.email
					, NEW.phone
					, NEW.balance
					, NEW.balanceAt
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Person_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Person_AFTER_DELETE` AFTER DELETE ON `Person` FOR EACH ROW
BEGIN
	CALL p_Person_audit(OLD.id
					, OLD.name
					, OLD.personType
					, OLD.cpfCnpj
					, OLD.email
					, OLD.phone
					, OLD.balance
					, OLD.balanceAt
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Address_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Address_AFTER_INSERT` AFTER INSERT ON `Address` FOR EACH ROW
BEGIN
	CALL p_Address_audit(NEW.id
					, NEW.street
					, NEW.city
					, NEW.stateFU
					, NEW.postalCode
					, NEW.country
					, NEW.personId
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Address_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Address_AFTER_UPDATE` AFTER UPDATE ON `Address` FOR EACH ROW
BEGIN
	CALL p_Address_audit(NEW.id
					, NEW.street
					, NEW.city
					, NEW.stateFU
					, NEW.postalCode
					, NEW.country
					, NEW.personId
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Address_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Address_AFTER_DELETE` AFTER DELETE ON `Address` FOR EACH ROW
BEGIN
	CALL p_Address_audit(OLD.id
					, OLD.street
					, OLD.city
					, OLD.stateFU
					, OLD.postalCode
					, OLD.country
					, OLD.personId
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Match_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Match_AFTER_INSERT` AFTER INSERT ON `Match` FOR EACH ROW
BEGIN
	CALL p_Match_audit(NEW.id
					, NEW.name
					, NEW.groupRound
					, NEW.matchStart
					, NEW.matchEnd
					, NEW.status
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Match_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Match_AFTER_UPDATE` AFTER UPDATE ON `Match` FOR EACH ROW
BEGIN
	CALL p_Match_audit(NEW.id
					, NEW.name
					, NEW.groupRound
					, NEW.matchStart
					, NEW.matchEnd
					, NEW.status
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Match_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Match_AFTER_DELETE` AFTER DELETE ON `Match` FOR EACH ROW
BEGIN
	CALL p_Match_audit(OLD.id
					, OLD.name
					, OLD.groupRound
					, OLD.matchStart
					, OLD.matchEnd
					, OLD.status
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Team_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Team_AFTER_INSERT` AFTER INSERT ON `Team` FOR EACH ROW
BEGIN
	CALL p_Team_audit(NEW.id
					, NEW.name
					, NEW.teamImage
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Team_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Team_AFTER_UPDATE` AFTER UPDATE ON `Team` FOR EACH ROW
BEGIN
	CALL p_Team_audit(NEW.id
					, NEW.name
					, NEW.teamImage
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Team_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Team_AFTER_DELETE` AFTER DELETE ON `Team` FOR EACH ROW
BEGIN
	CALL p_Team_audit(OLD.id
					, OLD.name
					, OLD.teamImage
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Bet_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Bet_AFTER_INSERT` AFTER INSERT ON `Bet` FOR EACH ROW
BEGIN
	CALL p_Bet_audit(NEW.id
					, NEW.amount
					, NEW.dateTimeAt
					, NEW.status
					, NEW.personId
					, NEW.matchId
					, NEW.teamId
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Bet_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Bet_AFTER_UPDATE` AFTER UPDATE ON `Bet` FOR EACH ROW
BEGIN
	CALL p_Bet_audit(NEW.id
					, NEW.amount
					, NEW.dateTimeAt
					, NEW.status
					, NEW.personId
					, NEW.matchId
					, NEW.teamId
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Bet_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Bet_AFTER_DELETE` AFTER DELETE ON `Bet` FOR EACH ROW
BEGIN
	CALL p_Bet_audit(OLD.id
					, OLD.amount
					, OLD.dateTimeAt
					, OLD.status
					, OLD.personId
					, OLD.matchId
					, OLD.teamId
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Transaction_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Transaction_AFTER_INSERT` AFTER INSERT ON `Transaction` FOR EACH ROW
BEGIN
	CALL p_Transaction_audit(NEW.id
					, NEW.name
					, NEW.amount
					, NEW.dateTimeAt
  					, NEW.status
  					, NEW.receiver
  					, NEW.payer
					, NEW.betId
					, 'C'
					, NEW.lastUsername
	);
	CALL p_Transaction_made(NEW.amount
					, NEW.dateTimeAt
  					, NEW.receiver
  					, NEW.payer
					, NEW.id
	);					
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Transaction_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Transaction_AFTER_UPDATE` AFTER UPDATE ON `Transaction` FOR EACH ROW
BEGIN
	CALL p_Transaction_audit(NEW.id
					, NEW.name
					, NEW.amount
					, NEW.dateTimeAt
  					, NEW.status
  					, NEW.receiver
  					, NEW.payer
					, NEW.betId
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`Transaction_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`Transaction_AFTER_DELETE` AFTER DELETE ON `Transaction` FOR EACH ROW
BEGIN
	CALL p_Transaction_audit(OLD.id
					, OLD.name
					, OLD.amount
					, OLD.dateTimeAt
  					, OLD.status
  					, OLD.receiver
  					, OLD.payer
					, OLD.betId
					, 'D'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`User_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`User_AFTER_INSERT` AFTER INSERT ON `User` FOR EACH ROW
BEGIN
	CALL p_User_audit(NEW.id
					, NEW.username
					, NEW.password
					, NEW.role
					, NEW.personId
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`User_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`User_AFTER_UPDATE` AFTER UPDATE ON `User` FOR EACH ROW
BEGIN
	CALL p_User_audit(NEW.id
					, NEW.username
					, NEW.password
					, NEW.role
					, NEW.personId
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`User_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`User_AFTER_DELETE` AFTER DELETE ON `User` FOR EACH ROW
BEGIN
	CALL p_User_audit(OLD.id
					, OLD.username
					, OLD.password
					, OLD.role
					, OLD.personId
					, 'U'
					, OLD.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`MatchsTeams_AFTER_INSERT`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`MatchsTeams_AFTER_INSERT` AFTER INSERT ON `MatchsTeams` FOR EACH ROW
BEGIN
	CALL p_MatchsTeams_audit(NEW.matchId
					, NEW.teamId
					, NEW.teamResult
					, NEW.teamOrder
					, NEW.odds
					, NEW.winner
					, 'C'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`MatchsTeams_AFTER_UPDATE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`MatchsTeams_AFTER_UPDATE` AFTER UPDATE ON `MatchsTeams` FOR EACH ROW
BEGIN
	CALL p_MatchsTeams_audit(NEW.matchId
					, NEW.teamId
					, NEW.teamResult
					, NEW.teamOrder
					, NEW.odds
					, NEW.winner
					, 'U'
					, NEW.lastUsername
	);
END
$$

-- -----------------------------------------------------
-- Trigger `golaco_db`.`MatchsTeams_AFTER_DELETE`
-- -----------------------------------------------------
USE `golaco_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `golaco_db`.`MatchsTeams_AFTER_DELETE` AFTER DELETE ON `MatchsTeams` FOR EACH ROW
BEGIN
	CALL p_MatchsTeams_audit(OLD.matchId
					, OLD.teamId
					, OLD.teamResult
					, OLD.teamOrder
					, OLD.odds
					, OLD.winner
					, 'D'
					, OLD.lastUsername
	);
END
$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- =====================================================
-- =====================================================
-- -----------------------------------------------------
-- POPULATE DATABASE
-- -----------------------------------------------------

USE `golaco_db` ;

INSERT INTO `golaco_db`.`Person` (id, name, personType, cpfCnpj, email, phone, balance, balanceAt, lastUsername)
	VALUES (1, 'GOLAÇO LTDA', 'J', '11111111000111', 'golaco@golaco.bet', '16999998741', 0, CURRENT_TIMESTAMP, 'System Instalation')
		, (2, 'Maria Oliveira', 'F', '22222222222', 'maria@dominio.com', '16966667777', 100.23, CURRENT_TIMESTAMP, 'System Instalation')
		, (3, 'José Vieira', 'F', '33333333333', 'jose@dominio.com', '16988886666', 500.00, CURRENT_TIMESTAMP, 'System Instalation');

INSERT INTO `golaco_db`.`Address` (street, city, stateFU, postalCode, country, personId, lastUsername)
	VALUES ('Rua 15 de Novembro, n. 5687, Jd Cidade', 'São Paulo', 'SP', '01111000', 'Brasil', 2, 'System Instalation')
		, ('Avenida Marginal, n. 697, Jd Cidade', 'Rio de Janeiro', 'RJ', '21222000', 'Brasil', 3, 'System Instalation');

INSERT INTO `golaco_db`.`User` (username, password, role, personId, lastUsername)
	VALUES ('golaco@golaco.bet', '$2b$10$dmQnbUzqLOc/w7ZUxE3t0u8U/dRKkT/.Gd4TGe8huElczOLgMQ1aS', 'ADMIN', 1, 'System Instalation')
		, ('maria@dominio.com', '$2b$10$dmQnbUzqLOc/w7ZUxE3t0u8U/dRKkT/.Gd4TGe8huElczOLgMQ1aS', 'USER', 2, 'System Instalation')
		, ('jose@dominio.com', '$2b$10$dmQnbUzqLOc/w7ZUxE3t0u8U/dRKkT/.Gd4TGe8huElczOLgMQ1aS', 'USER', 3, 'System Instalation');
		
		
INSERT INTO `golaco_db`.`Team` (id, name, teamImage, lastUsername)
	VALUES (1, 'Brasil', 'https://flagcolor.com/wp-content/uploads/2019/04/brazil_flag_colors.png', 'System Instalation')
		, (2, 'Equador', 'https://flagcolor.com/wp-content/uploads/2019/05/ecuador_flag.png', 'System Instalation')
		, (3, 'Países Baixos', 'https://flagcolor.com/wp-content/uploads/2019/05/netherlands_flag.png', 'System Instalation')
		, (4, 'Inglaterra', 'https://flagcolor.com/wp-content/uploads/2019/02/united_kingdom_flag_colors-300x150.png', 'System Instalation')
		, (5, 'Irão', 'https://flagcolor.com/wp-content/uploads/2019/05/iranian_flag.png', 'System Instalation')
		, (6, 'Argentina', 'https://flagcolor.com/wp-content/uploads/2018/11/argentina_flag-300x193.png', 'System Instalation')
		, (7, 'México', 'https://flagcolor.com/wp-content/uploads/2018/04/mexico_flag-300x171.png', 'System Instalation')
		, (8, 'Alemanha', 'https://flagcolor.com/wp-content/uploads/2018/04/german_flag-300x180.png', 'System Instalation');

		
INSERT INTO `golaco_db`.`Match` (id, name, groupRound, matchStart, matchEnd, status, lastUsername)
	VALUES (1, 'Jogo 1', 'Copa do Mundo Qatar 2022 - Oitavas de Final', '2022-11-01 12:00:00', '2022-11-01 14:00:00', 'awaiting', 'System Instalation')
	, (2, 'Jogo 2', 'Copa do Mundo Qatar 2022 - Oitavas de Final', '2022-11-01 16:00:00', '2022-11-01 18:00:00', 'awaiting', 'System Instalation')
	, (3, 'Jogo 3', 'Copa do Mundo Qatar 2022 - Oitavas de Final', '2022-11-02 12:00:00', '2022-11-01 14:00:00', 'awaiting', 'System Instalation')
	, (4, 'Jogo 4', 'Copa do Mundo Qatar 2022 - Oitavas de Final', '2022-11-02 16:00:00', '2022-11-01 18:00:00', 'awaiting', 'System Instalation');
	
INSERT INTO `golaco_db`.`MatchsTeams` (matchId, teamId, teamResult, teamOrder, odds, winner, lastUsername)
	VALUES (1, 1, null, 0, 1.2, false, 'System Instalation')
	, (1, 2, null, 1, 2.1, false, 'System Instalation')
	, (2, 3, null, 0, 3.1, false, 'System Instalation')
	, (2, 4, null, 1, 1.2, false, 'System Instalation')
	, (3, 5, null, 0, 5.6, false, 'System Instalation')
	, (3, 6, null, 1, 1.2, false, 'System Instalation')
	, (4, 7, null, 0, 2.3, false, 'System Instalation')
	, (4, 8, null, 1, 1.6, false, 'System Instalation');
	
INSERT INTO `golaco_db`.`Bet` (id, dateTimeAt, amount, status, personId, matchId, teamId, lastUsername)
	VALUES (1, CURRENT_TIMESTAMP, 20, 'done', 2, 1, 2, 'System Instalation')
	, (2, CURRENT_TIMESTAMP, 10.23, 'done', 2, 2, 1, 'System Instalation')
	, (3, CURRENT_TIMESTAMP, 70, 'done', 2, 3, 1, 'System Instalation')
	, (4, CURRENT_TIMESTAMP, 250.63, 'done', 3, 1, 2, 'System Instalation')
	, (5, CURRENT_TIMESTAMP, 80.3, 'done', 3, 4, 1, 'System Instalation');
	
INSERT INTO `golaco_db`.`Transaction` (name, amount, dateTimeAt, status, receiver, payer, betId, lastUserName)
	VALUES ('Aposta', 20, CURRENT_TIMESTAMP, 'done', 1, 2, 1, 'System Instalation')
	, ('Aposta', 10.23, CURRENT_TIMESTAMP, 'done', 1, 2, 2, 'System Instalation')
	, ('Aposta', 70, CURRENT_TIMESTAMP, 'done', 1, 2, 3, 'System Instalation')
	, ('Aposta', 250.63, CURRENT_TIMESTAMP, 'done', 1, 3, 4, 'System Instalation')
	, ('Aposta', 80.3, CURRENT_TIMESTAMP, 'done', 1, 3, 5, 'System Instalation')
	, ('Depósito', 500, CURRENT_TIMESTAMP, 'done', 2, null, null, 'System Instalation')
	, ('Retirada', 30, CURRENT_TIMESTAMP, 'done', null, 3, null, 'System Instalation');